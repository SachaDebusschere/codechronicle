name: Génération Automatique d'Articles

permissions:
    contents: write
    issues: write
    pull-requests: write

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  generate-article:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Install dependencies
        run: |
            npm install
      
      - name: Génération des articles
        id: generate
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Répertoire de travail : $(pwd)"
          echo "Contenu du répertoire courant :"
          ls -la
          echo "Contenu du dossier blog :"
          ls -la blog/
          
          # Vérifier que la clé API est bien présente
          echo "Clé API (masquée) : ${OPENAI_API_KEY:0:4}****"
          
          # Trouver tous les fichiers .md dans le dossier blog
          for file in blog/*.md; do
            if [ -f "$file" ]; then
              echo "Traitement du fichier : $file"
              node scripts/generateArticleOui.js "$file"
            fi
          done
          
          # Récupérer la liste des fichiers générés
          generated_files=$(find blog -name "*.md" -type f)
          echo "generated_files=${generated_files}" >> $GITHUB_OUTPUT
      
      - name: Commit et push des changements
        if: steps.generate.outputs.generated_files != ''
        run: |
          git config --local user.email "sacha.debusschere.sd@gmail.com"
          git config --local user.name "Sacha Debusschere"
          git add blog/
          git commit -m "Génération automatique d'articles"
          git push
      
      - name: Créer un artefact avec les articles générés
        if: steps.generate.outputs.generated_files != ''
        uses: actions/upload-artifact@v4
        with:
          name: articles-generes
          path: blog/

      - name: Cloner le dépot Github pour ajouter un commentaire sur la PR
        uses: actions/checkout@v4

      - name : Télécharger l'Artefact stocké
        uses: actions/download-artifact@v4
        with:
          name: articles-generes
          path: ./blog/
        
      - name: Ajouter un commentaire sur la PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Les articles suivants ont été générés : ${{ env.generated_files }}"
            })