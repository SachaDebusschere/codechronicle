name: Génération Automatique d'Articles

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]


jobs:
  generate-article:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Install dependencies
        run: |
            npm install
      
      - name: Vérifier la configuration OpenAI
        env: 
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Vérifier que la clé API est définie
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "❌ La clé API OpenAI n'est pas définie dans les secrets GitHub!"
            exit 1
          else
            echo "✅ La clé API OpenAI est définie."
            echo "Les 3 premiers caractères: ${OPENAI_API_KEY:0:3}... et les 4 derniers: ...${OPENAI_API_KEY: -4}"
          fi
      
      - name: Trouver les fichiers markdown vides
        id: find-empty-files
        run: |
          empty_files=()
          for file in $(find blog -name "*.md"); do
            if [ ! -s "$file" ] || [ "$(cat "$file" | tr -d '[:space:]')" = "" ]; then
              empty_files+=("$file")
              echo "Fichier vide trouvé: $file"
            fi
          done
          
          if [ ${#empty_files[@]} -eq 0 ]; then
            echo "Aucun fichier vide trouvé."
          else
            echo "Nombre de fichiers vides trouvés: ${#empty_files[@]}"
          fi
          
          echo "empty_files=${empty_files[*]}" >> $GITHUB_OUTPUT
      
      - name: Génération des articles
        id: generate
        if: steps.find-empty-files.outputs.empty_files != ''
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          results=()
          
          for file in ${{ steps.find-empty-files.outputs.empty_files }}; do
            echo "Génération du contenu pour $file"
            echo "Tentative d'exécution: node scripts/generateArticle.js \"$file\""
            node scripts/generateArticle.js "$file" || {
              echo "⚠️ Échec de la génération d'article. Sortie du code avec erreur."
              exit 1
            }
            
            # Extrait le nom du fichier pour l'affichage
            filename=$(basename "$file")
            results+=("- $filename")
          done
          
          echo "generated_files=${results[*]}" >> $GITHUB_OUTPUT
      
      - name: Commit et push des changements
        if: steps.generate.outputs.generated_files != ''
        run: |
          git config --local user.email "sacha.debusschere.sd@gmail.com"
          git config --local user.name "Sacha Debusschere"
          git add blog/
          git commit -m "Génération automatique d'articles"
          git push
      
      - name: Créer un artefact avec les articles générés
        if: steps.generate.outputs.generated_files != ''
        uses: actions/upload-artifact@v4
        with:
          name: articles-generes
          path: blog/